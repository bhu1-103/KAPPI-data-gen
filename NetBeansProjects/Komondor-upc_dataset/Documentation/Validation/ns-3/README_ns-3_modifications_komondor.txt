%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% ns-3 modifications to match Komondor %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  i)   The Error rate model is disabled:
          That means that once a packet is detected
          with RSSI > RxSens, it will successfully
          be received. Although, there are some error
          models produced (and can be found on the 
          internet), we introduced a flag (boolean)
          in the wifi-phy.cc to "enable/disable the
          error rate model"
 ii)   The unsigned integer for supporting AMPDU is corrected:
          With the IEEE 802.11ac/ax the maximum size of AMPDU
          has been extended (also the number of AMPDU frames
          in IEEE 802.11ax from 64 to 256) to support sizes
          larger than 65kB. See for example the regular-wifi-manager.cc
          and all the classes relating with it.
iii)   The GetPlcpTrainingSymbolDuration function is updated:
          That function was updated to match with the latest IEEE
          802.11ax amendment (D2.0)	               
 iv)   The capture effect model is modified:
          Minor changes in the capture model to capture the behaviour
          of the event-driven simulator (Komondor), i.e. 800ns is the
          duration and not the whole preamble duration.
  v)   The Propagation Model for Residential scenarios is developed:
          The propagation loss model based on TGax for SCE1 is developed
          and merged in ns-3 (tgax-sce1-propagation-loss-model.cc under
          the src/propagation/model)      


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%% Instructions %%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The scripts containing the information for the scenarios presented
in the paper xxxx are under the scratch folder. The settings for a 
specific scenario are listed in xxxx, where all the information 
with regard to the MAC/PHY and mobility settings can be found 
(e.g. CCA, TxPower, position, MCS, No. of AMPDU etc.). Further, 
the beacon generation can be disabled (by default is disabled) 
or enabled in the scripts.
The main settings that the user needs to configure for the scenarios
include the CCA threshold (the same value is used for the CCA/ED and CCA
mode1 in ns-3), MCS, number of STAs for the SCE1, and position for APs 
and STAs.

The simulations can be initiated by running the bash script in the waf
directory and pass some parameters as explained below(i.e. 
run_scenario1.sh, run_scenarioOct.sh). The command for
running the bash scripts is e.g. bash run_scenario1.sh 0 1 0
                                                       ^ ^ ^
The first digit (0) indicates the run seed in hundreds (corresponds to the 
DROP_START array), e.g. 0 --> 0, 1 --> 100, 2 --> 200 etc. 
The second digit (1) indicates the number of runs, e.g. 1 --> 1 run,
2 --> 2 runs etc.
The third digit (0) indicates the run seed in decades.

Examples,
          0 1 0 : RunSeed start: 0, Run numbers: 1, RunSeed finish: 0 
          0 2 0 : RunSeed start: 0, Run numbers: 2, RunSeed finish: 1
          0 2 98: RunSeed start: 98, Run numbers: 2, RunSeed finish: 99
          3 2 98: RunSeed start: 398, Run numbers: 2, RunSeed finish: 399        
          
There are also bash scripts (awk) to collect the data produced by running
the simulation scenarios (processing_komondor_stas.sh and processing_stas.sh).
Both files calculate the average throughput per STA, after discarding the 
first seconds of the simulation (warm up period), and save it in a file
(OUT_NAME_AVE --> Final_STAs_${PRENAME}_SNR_${snrFlag[$snrInt]}_ave.tr).
Note that the temp files generated by running the processing file can 
be discarded after running the processing file. Note, that the range 
(RunSeed) and the name of the processing/output files can be modified 
upon the user request (if needed).
